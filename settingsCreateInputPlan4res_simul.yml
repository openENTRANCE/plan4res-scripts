##############################################################################
# inputs for creating the plan4res parameter sheet
# also used for treating the data
##############################################################################
# list of different scenarios and years (eg. from GENeSYS-MOD results) for which we want to create a dataset
scenarios: ['Techno-Friendly 2.0']
years: [2030]

# if data are located within the plan4res container, use plan4res path
USEPLAN4RESROOT: True

# path where to output the plan4res format csv data
path: '/data/local/ExampleRun/'
# path where to find the stochastic time series csv files
timeseriespath: '/data/local/TimeSeries/'
# path where config files are
configDir: '/scripts/python/plan4res-scripts/'
# path where openentrance nomenclature is cloned
nomenclatureDir: '/scripts/python/openentrance/definitions/'
csvfiles: # list of csv files to create in the plan4res excel file (comment line if not treated)
    ZP_ZonePartition: 'ZP_ZonePartition.csv'  # mandatory, contains description of regions
    IN_Interconnections: 'IN_Interconnections.csv'  # optionnal, contains description of network
    ZV_ZoneValues: 'ZV_ZoneValues.csv' # mandatory, contains description of coupling constraints
    TU_ThermalUnits: 'TU_ThermalUnits.csv' # optionnal, contains description of thermal units
    SS_SeasonalStorage: 'SS_SeasonalStorage.csv' # optionnal, containsescription of seasonal storages
    STS_ShortTermStorage: 'STS_ShortTermStorage.csv' # optionnal, contains description of short term storages
    RES_RenewableUnits: 'RES_RenewableUnits.csv' # optionnal, contains description of renewable units
    #SYN_SynchCond: 'SYN.csv' # optionnal, contains description of synchronous condensers

# Regions
#######################################

# list of regions to get from data sources 
listregionsGET: ['Austria' , 'Belgium' , 'Bulgaria' , 'Croatia' , 'Czech Republic' , 'Denmark' , 'Estonia' , 'Finland' , 'France' , 'Germany' ,'Greece' , 'Hungary' , 'Ireland' , 'Italy' , 'Latvia' , 'Lithuania' , 'Luxembourg' , 'Non-EU-Balkans' , 'North Macedonia', 'Norway' , 'Poland' , 'Portugal' , 'Romania' , 'Slovakia' , 'Slovenia' , 'Spain' , 'Sweden' , 'Switzerland' , 'The Netherlands' , 'Turkey' ,'United Kingdom']
aggregateregions: # how to aggregate regions in plan4res dataset
      #'North': ['Norway','Sweden','Finland','Denmark','Estonia', 'Latvia', 'Lithuania']
      #'East': ['Austria' ,  'Czech Republic', 'Hungary' , 'Poland' , 'Slovakia','Non-EU-Balkans', 'Bulgaria', 'Croatia','Greece','Romania','Slovenia','North Macedonia','Turkey' ]
      'Iberia': ['Spain','Portugal']
      #'Benelux': ['Belgium', 'Luxembourg' , 'The Netherlands']
      #'Baltics': ['Estonia', 'Latvia', 'Lithuania']
      #'Balkans': ['Non-EU-Balkans', 'Bulgaria', 'Croatia','Greece','Romania','Slovenia','North Macedonia']   #for CS1
      #'EasternEurope': ['Austria' ,  'Czech Republic', 'Hungary' , 'Poland' , 'Slovakia' ]
      #'Britain': ['Ireland' ,'United Kingdom']   

# regional partitions in plan4res (partitions are used for coupling constraints)
partition:
    #Countries: ['France' , 'Germany' , 'Italy' ,  'Switzerland' , 'EasternEurope', 'Benelux', 'Iberia', 'Britain', 'Balkans', 'Baltics', 'Denmark', 'Finland', 'Sweden','Norway']
    Countries: ['Iberia','France']
    Continent: ['Continent']

technos: # list of technologies and link to modelling in plan4res
# thermal= modelled as ThermalUnit (TU), reservoir= modelled as HydroUnit (SS), 
# hydrostorage/battery=modelled as ShortTermStorage (STS), res/runofriver=modelled as IntermittentUnit (RES)
    thermal: ['Biomass|w/ CCS','Biomass|w/o CCS','Coal|Hard coal|w/o CCS','Coal|Hard coal|w/ CCS','Coal|Lignite|w/o CCS','Gas|CCGT|w/o CCS','Gas|CCGT|w/ CCS','Gas|OCGT|w/o CCS','Geothermal','Hydrogen|OCGT','Nuclear','Oil|w/o CCS']
    reservoir: ['Reservoir']
    hydrostorage: ['Pumped Storage']
    battery: ['Compressed Air','Lithium-Ion']
    res: ['Solar|PV', 'Wind|Onshore', 'Wind|Offshore']
    runofriver: ['Hydro|Run of River']

# list of the names of the scenarised timeseries for scenarised data 
# if using plan4res scenarised data, they are named from the meteorological year
# that was used for their creation
StochasticScenarios: [1982,1983,1984,1985,1986,1987,1988,1989,1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018]

CouplingConstraints: # MaxPower and variable cost to use for creating slack units (units for non served)
    # Coupling constraints which are not listed here will not be created in dataset
    # Coupling contraints can be : Demand, Primary, Secondary, Inertia, CO2
    # For the case of CO2, MaxPower and Cost are not needed, Budget can be defined (tons/CO2)
    # Partition defines the level at which the coupling constraint applies
    ActivePowerDemand : # mandatory - demand constraint
        Partition: 'Countries'
        MaxPower : 1500000
        Cost : 10000
        #SumOf: ['ElecHeating','ElecVehicle','AirCondition','nonthermo']
        SumOf: ['Total']
    # PrimaryDemand : # optional - primary reserve constraint
        # Partition: 'Countries'
        # MaxPower : 1000
        # Cost : 15000
        # SumOf: ['Primary']
    # SecondaryDemand : # optional - primary reserve constraint
        # Partition: 'Countries'
        # MaxPower : 1000
        # Cost : 15000
        # SumOf: ['Secondary']
    # InertiaDemand : # optional - inertia constraint
        # Partition: 'Continent'
        # MaxPower : 10000
        # Cost : 15000
        # SumOf: ['Inertia']
    # PollutantBudget:
        # CO2: # optional - emissions constraints (in further versions there can be multiple gases)
            # Partition: 'Continent'
            # Budget: 100000
            # SumOf: ['CO2']

############################################################
# General parameters for dataset creation
#############################################################

# these are used when data are not available
PumpingEfficiency:
    battery:
        Compressed Air: 0.7
        Lithium-Ion: 0.7
    hydrostorage:
        Pumped Storage: 0.8
    reservoir:
        Reservoir: 0.8

# list of parameters for treating the data
ParametersCreate:
    CapacityExpansion: # define capacity expansion dataset - list of technos which can be invested
        thermal: 
            Biomass|w/ CCS: 
                MaxAdd: 1000
                MaxRet: 0
            Biomass|w/o CCS: 
                MaxAdd: 1000
                MaxRet: 0
            Gas|CCGT|w/ CCS:  
                MaxAdd: 1000
                MaxRet: 0
            Geothermal:  
                MaxAdd: 1000
                MaxRet: 0
            Hydrogen|OCGT:  
                MaxAdd: 1000
                MaxRet: 0
            Nuclear:  
                MaxAdd: 1000
                MaxRet: 0
        battery:
            Compressed Air:  
                MaxAdd: 1000
                MaxRet: 0
                InvestmentCost: 5000
            Lithium-Ion:  
                MaxAdd: 1000
                MaxRet: 0
                InvestmentCost: 100
        res: 
            Solar|PV:  
                MaxAdd: 1000
                MaxRet: 0
                InvestmentCost: 290
            Wind|Onshore:  
                MaxAdd: 1000
                MaxRet: 0
            Wind|Offshore:  
                MaxAdd: 1000
                MaxRet: 0
        interconnections: # either define the share of maxcapacity which can be added or a list of lines with max added capacity
            Share:  
                MaxAdd: 0.2
                MaxRet: 0 
            InvestmentCost: 100
    conversiondollar2010euro2020: 0.978  # should be the same value than the one used below
    conversions:
        'EJ/yr': 
            to: 'MWh/yr'
        'PJ':
            to: 'MWh'
        'GW':
            to: 'MW'
        'GWh':
            to: 'MWh'
        'GWh/yr':
            to: 'MWh/yr'
        'MEUR/GW':
            to: 'EUR/MW'
        'MEUR_2020/PJ':
            to: 'MEUR/PJ'
            factor: 1
        'MEUR/PJ':
            to: 'EUR/MWh'
        'USD_2010/kW/yr':
            to: 'EUR/MW/yr'
            factor: 978
        'USD_2010/kW':
            to: 'EUR/MW'
            factor: 978
        'USD_2010/kW/yr':
            to: 'EUR/MW/yr'
            factor: 978
        'USD_2010/MWh':
            to: 'EUR/MWh'
            factor: 0.978
        'USD_2010/MWh/yr':
            to: 'EUR/MWh/yr'
            factor: 0.978
        'Mt CO2/yr':
            to: 't CO2/yr'
    zerocapacity: 1.0  # capacity in MW under which it is considered to be 0
    DynamicConstraints: no  # if 'no' the dataset will not include dynamic constraints: MinPower is set to 0, StartUpCost, MinUp and Down duration are not used
    invest: no # yes: create a dataset for the Capacity Expansion model
    MultFactor:  # list of technos where MaxPower is computed as energy/(mean load profile*8760)
        Hydro|Run of River : 8760
    Volume2CapacityRatio :  # used to compute the MaxPower or MaxVolume of storage units
        battery: 
            Compressed Air: 100
            Lithium-Ion: 4
        hydrostorage:
            Pumped Storage: 100
    reservoir:
        minpowerMWh: 1000  # if the volume of the reservoir is lower, converted to short term storage
    thermal:
        NbUnitsPerTechno: 1 # if >1, the data must include unit max power for the technology and the number of units is computed as Capacity/MaxPower
        variablecost: 'Cost'  # if 'Price' the variable cost is computed as Price*Efficiency
        fuel:  # in the case of 'Price', gives the name of the correspondent fuel for which the price should be used
            Gas|Hydrogen|OCGT|w/o CHP: Gas|Hydrogen
            Gas|Hydrogen|CCGT|w/o CHP: Gas|Hydrogen
    
    InitialFillingrate:  # initial filling rates of reservoirs per countries
        Austria : 0.37
        Czech Republic : 0.37
        Bulgaria : 0.37
        Slovenia : 0.37
        Slovakia : 0.37
        Poland : 0.37
        Belgium : 0.40
        Finland : 0.42
        France : 0.40
        Luxembourg: 0.40
        Germany : 0.40
        Italy : 0.41
        Montenegro : 0.37
        Norway : 0.53
        Portugal : 0.46
        Romania : 0.37
        Serbia : 0.37
        Spain : 0.1
        Sweden : 0.54
        Switzerland : 0.19
        United Kingdom : 0.40
        The Netherlands : 0.40
        Ireland : 0.40
    ExistsNuts: False
    DemandResponseCoefficient: 1.000001 
    DemandResponseLoadShifting:  # parameters used for modelling residential load control (openentrance CS1)
        tshift:  # size (in hours) of windows on which load shifting is possible
            Electric Vehicle: 4
            Dryer: 6
            Washing Machine: 6
            Dish Washer: 6
            Storage Heater: 12
            Water Heater: 12
            Refrigeration: 2
            Air Conditioning: 2
            Heat Pump: 3
            Circulation Pump: 2
        participationRate: yes  # if no, participation rate is 100%, if yes, use data from below file
        participationRateData: 'path of the csv file containing data'


 

# the datagroup section lists the different 'sources' to get the data
# for each source:
# - directory and file name where to find data in case data are retrieved from 'files' (see above)
# - model, scenario, year to filter on (see openentrance data format) ; only one year is possible for plan4EU
# - regions: list of additionnal regions to retrieve (compared to listregionsGET above)	: nuts1, nuts2, nuts3, countries, ehighway
# - list of variabes to retrieve ; variables are separated into 
#		- global : global variables, not depending on technologies (eg demand, carbon price)
#		- techno : variables for which the treatment is different depending on the kind of technology, among:
#			- thermal : themal power plants
#			- reservoir : seasonal hydro storage
#			- hydrostorage : hydro short term storage
#			- battery : battery short term storage
#			- res : renewable generation (PV, windpower, run of river, ....)
#			- demandresponseloadshifting : load shifting for CS1
#	for each group, variables are separated into 3 categories, depending on the method to use for aggregating regions (add, global ie single value, mean)
# a different group must be given for annual and subannual data

listdatagroups: ['genesys1','genesys2','ehighway','entsoe']

datagroups:
    genesys1:  # here the group with data from Open Entrance Scenario
        inputdatapath: '/data/local/GENeSYS-MOD/'  
        inputdata: 'openENTRANCE_GENeSYS-MOD_pathways.xlsx' 
        model: 'GENeSYS-MOD 3.1'
        regions:
            global: 'Europe (incl. Turkey)'  # region to be used for global data
            local: []   # additional regions to include compared to general list
        subannual: no
        listvariables:
            coupling: 
                mean: ['Price|Carbon']
                add: ['Final Energy|Electricity','Final Energy|Electricity|Heat', 'Final Energy|Electricity|Transportation']
            techno:
                thermal:
                    add: ['Capacity|Electricity|','Secondary Energy|Electricity|']
                    mean: ['Variable Cost|Electricity|','Fixed Cost|Electricity|','Capital Cost|Electricity|']
                reservoir:
                    add: ['Capacity|Electricity|Hydro|']
                hydrostorage:
                    add: ['Capacity|Electricity|Hydro|','Maximum Storage|Electricity|Energy Storage System|Hydro|']
                battery:
                    add: ['Maximum Storage|Electricity|Energy Storage System|']
                res:
                    add: ['Secondary Energy|Electricity|','Capacity|Electricity|']
                    mean: ['Variable Cost|Electricity|','Fixed Cost|Electricity|','Capital Cost|Electricity|']
                runofriver:
                    add: ['Capacity|Electricity|']
    genesys2:  # here the group with recomputed data out of GENeSYS-MOD xlsx outputs
        inputdatapath: '/data/local/GENeSYS-MOD/'  
        inputdata: 'GENeSYS-MOD-pathways_D3.2_with_transmission_244_IAMC.csv' 
        model: 'GENeSYS-MOD 3.1'
        regions:
            global: 'Europe (incl. Turkey)'  # region to be used for global data
            local: []   # additional regions to include compared to general list
        subannual: no
        listvariables:
            coupling: 
                flow: ['Network|Electricity|Maximum Flow']
            techno:
                reservoir:
                    add: ['Secondary Energy|Electricity|Hydro|']
                hydrostorage:
                    global: ['Pumping Efficiency|Electricity|Hydro|']
                battery:
                    global: ['Roundtrip Efficiency|Electricity|Energy Storage System|']
                runofriver:
                    add: ['Secondary Energy|Electricity|']
    ehighway:
        inputdatapath: '/data/local/GENeSYS-MOD/'  
        inputdata: 'eHighway2050__EDF__V2.0.csv'        
        model: 'plan4eu-V1.1'
        scenario: 'eHighway2050'
        year: 2050
        regions:
            global: 'Europe'
            local: []
        subannual: no
        listvariables: 
            coupling: 
                mean: ['Share|Final Energy|Electricity|Cooling']
    entsoe:
        inputdatapath: '/data/local/GENeSYS-MOD/'  
        inputdata: 'ENTSOE__EDF__V2.0.csv' 
        model: 'plan4eu-V1.1'
        scenario: 'ENTSOETransparency'
        year: 2050
        regions:
            global: 'Europe'
            local: []
        subannual: no
        listvariables:
            techno:
                reservoir:
                    add: ['Maximum Storage|Electricity|Hydro|']

# credentials for openentrance platform
user: 'user'
password: 'pass'

# mode : 'platform' or 'files' (one 1 csv file per data type)
mode_annual: 'files'
mode_subannual: 'files'
